{"ast":null,"code":"var _jsxFileName = \"/Users/jungjunwoo/Downloads/themeforest-0OFwquHn-lezada-react-next-js-multipurpose-ecommerce-template 2/lezada/src/components/ProductThumb/ProductGridWrapper.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { getDiscountPrice } from \"../../lib/product\";\nimport { addToCart } from \"../../redux/actions/cartActions\";\nimport { addToWishlist, deleteFromWishlist } from \"../../redux/actions/wishlistActions\";\nimport { addToCompare, deleteFromCompare } from \"../../redux/actions/compareActions\";\nimport ProductGrid from \"./ProductGrid\";\n\nconst ProductGridWrapper = ({\n  products,\n  bottomSpace,\n  addToCart,\n  addToWishlist,\n  deleteFromWishlist,\n  addToCompare,\n  deleteFromCompare,\n  cartItems,\n  wishlistItems,\n  compareItems,\n  column\n}) => {\n  const {\n    addToast\n  } = useToasts();\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, products && products.map(product => {\n    const discountedPrice = getDiscountPrice(product.price, product.discount).toFixed(2);\n    const productPrice = product.price.toFixed(2);\n    const cartItem = cartItems.filter(cartItem => cartItem.id === product.id)[0];\n    const wishlistItem = wishlistItems.filter(wishlistItem => wishlistItem.id === product.id)[0];\n    const compareItem = compareItems.filter(compareItem => compareItem.id === product.id)[0];\n    return __jsx(ProductGrid, {\n      key: product.id,\n      product: product,\n      discountedPrice: discountedPrice,\n      productPrice: productPrice,\n      cartItem: cartItem,\n      wishlistItem: wishlistItem,\n      compareItem: compareItem,\n      bottomSpace: bottomSpace,\n      addToCart: addToCart,\n      addToWishlist: addToWishlist,\n      deleteFromWishlist: deleteFromWishlist,\n      addToCompare: addToCompare,\n      deleteFromCompare: deleteFromCompare,\n      addToast: addToast,\n      cartItems: cartItems,\n      column: column,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    });\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    cartItems: state.cartData,\n    wishlistItems: state.wishlistData,\n    compareItems: state.compareData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: (item, addToast, quantityCount, selectedProductColor, selectedProductSize) => {\n      dispatch(addToCart(item, addToast, quantityCount, selectedProductColor, selectedProductSize));\n    },\n    addToWishlist: (item, addToast) => {\n      dispatch(addToWishlist(item, addToast));\n    },\n    deleteFromWishlist: (item, addToast) => {\n      dispatch(deleteFromWishlist(item, addToast));\n    },\n    addToCompare: (item, addToast) => {\n      dispatch(addToCompare(item, addToast));\n    },\n    deleteFromCompare: (item, addToast) => {\n      dispatch(deleteFromCompare(item, addToast));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductGridWrapper);","map":{"version":3,"sources":["/Users/jungjunwoo/Downloads/themeforest-0OFwquHn-lezada-react-next-js-multipurpose-ecommerce-template 2/lezada/src/components/ProductThumb/ProductGridWrapper.js"],"names":["Fragment","connect","useToasts","getDiscountPrice","addToCart","addToWishlist","deleteFromWishlist","addToCompare","deleteFromCompare","ProductGrid","ProductGridWrapper","products","bottomSpace","cartItems","wishlistItems","compareItems","column","addToast","map","product","discountedPrice","price","discount","toFixed","productPrice","cartItem","filter","id","wishlistItem","compareItem","mapStateToProps","state","cartData","wishlistData","compareData","mapDispatchToProps","dispatch","item","quantityCount","selectedProductColor","selectedProductSize"],"mappings":"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","sourcesContent":["import { Fragment } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getDiscountPrice } from \"../../lib/product\";\r\nimport { addToCart } from \"../../redux/actions/cartActions\";\r\nimport {\r\n  addToWishlist,\r\n  deleteFromWishlist\r\n} from \"../../redux/actions/wishlistActions\";\r\nimport {\r\n  addToCompare,\r\n  deleteFromCompare\r\n} from \"../../redux/actions/compareActions\";\r\nimport ProductGrid from \"./ProductGrid\";\r\n\r\nconst ProductGridWrapper = ({\r\n  products,\r\n  bottomSpace,\r\n  addToCart,\r\n  addToWishlist,\r\n  deleteFromWishlist,\r\n  addToCompare,\r\n  deleteFromCompare,\r\n  cartItems,\r\n  wishlistItems,\r\n  compareItems,\r\n  column\r\n}) => {\r\n  const { addToast } = useToasts();\r\n  return (\r\n    <Fragment>\r\n      {products &&\r\n        products.map((product) => {\r\n          const discountedPrice = getDiscountPrice(\r\n            product.price,\r\n            product.discount\r\n          ).toFixed(2);\r\n          const productPrice = product.price.toFixed(2);\r\n          const cartItem = cartItems.filter(\r\n            (cartItem) => cartItem.id === product.id\r\n          )[0];\r\n          const wishlistItem = wishlistItems.filter(\r\n            (wishlistItem) => wishlistItem.id === product.id\r\n          )[0];\r\n          const compareItem = compareItems.filter(\r\n            (compareItem) => compareItem.id === product.id\r\n          )[0];\r\n\r\n          return (\r\n            <ProductGrid\r\n              key={product.id}\r\n              product={product}\r\n              discountedPrice={discountedPrice}\r\n              productPrice={productPrice}\r\n              cartItem={cartItem}\r\n              wishlistItem={wishlistItem}\r\n              compareItem={compareItem}\r\n              bottomSpace={bottomSpace}\r\n              addToCart={addToCart}\r\n              addToWishlist={addToWishlist}\r\n              deleteFromWishlist={deleteFromWishlist}\r\n              addToCompare={addToCompare}\r\n              deleteFromCompare={deleteFromCompare}\r\n              addToast={addToast}\r\n              cartItems={cartItems}\r\n              column={column}\r\n            />\r\n          );\r\n        })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartItems: state.cartData,\r\n    wishlistItems: state.wishlistData,\r\n    compareItems: state.compareData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addToCart: (\r\n      item,\r\n      addToast,\r\n      quantityCount,\r\n      selectedProductColor,\r\n      selectedProductSize\r\n    ) => {\r\n      dispatch(\r\n        addToCart(\r\n          item,\r\n          addToast,\r\n          quantityCount,\r\n          selectedProductColor,\r\n          selectedProductSize\r\n        )\r\n      );\r\n    },\r\n    addToWishlist: (item, addToast) => {\r\n      dispatch(addToWishlist(item, addToast));\r\n    },\r\n    deleteFromWishlist: (item, addToast) => {\r\n      dispatch(deleteFromWishlist(item, addToast));\r\n    },\r\n    addToCompare: (item, addToast) => {\r\n      dispatch(addToCompare(item, addToast));\r\n    },\r\n    deleteFromCompare: (item, addToast) => {\r\n      dispatch(deleteFromCompare(item, addToast));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductGridWrapper);\r\n"]},"metadata":{},"sourceType":"module"}