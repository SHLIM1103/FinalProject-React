{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\SOHYUN LIM\\\\Developer Liiim\\\\SpringBoot\\\\SpringBoot-finalproject\\\\fe\\\\components\\\\Newsletter\\\\SubscribeEmail.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\n\nvar CustomForm = function CustomForm(_ref) {\n  var status = _ref.status,\n      message = _ref.message,\n      onValidated = _ref.onValidated,\n      alertColor = _ref.alertColor;\n  var email;\n\n  var submit = function submit() {\n    email && email.value.indexOf(\"@\") > -1 && onValidated({\n      EMAIL: email.value\n    });\n    var emailInput = document.getElementById(\"mc-form-email\");\n    emailInput.value = \"\";\n  };\n\n  return __jsx(\"div\", {\n    className: \"subscribe-form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"mc-form position-relative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    id: \"mc-form-email\",\n    className: \"email\",\n    ref: function ref(node) {\n      return email = node;\n    },\n    type: \"email\",\n    placeholder: \"Your email address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    className: \"button\",\n    onClick: submit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"SUBSCRIBE\")), status === \"sending\" && __jsx(\"div\", {\n    style: {\n      color: alertColor,\n      fontSize: \"14px\",\n      marginTop: \"15px\",\n      lineHeight: \"1.3\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"sending...\"), status === \"error\" && __jsx(\"div\", {\n    style: {\n      color: alertColor,\n      fontSize: \"14px\",\n      marginTop: \"15px\",\n      lineHeight: \"1.3\"\n    },\n    dangerouslySetInnerHTML: {\n      __html: message\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), status === \"success\" && __jsx(\"div\", {\n    style: {\n      color: alertColor,\n      fontSize: \"14px\",\n      marginTop: \"15px\",\n      lineHeight: \"1.3\"\n    },\n    dangerouslySetInnerHTML: {\n      __html: message\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }));\n};\n\n_c = CustomForm;\n\nvar SubscribeEmail = function SubscribeEmail(_ref2) {\n  var mailchimpUrl = _ref2.mailchimpUrl,\n      alertColor = _ref2.alertColor;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(MailchimpSubscribe, {\n    url: mailchimpUrl,\n    render: function render(_ref3) {\n      var subscribe = _ref3.subscribe,\n          status = _ref3.status,\n          message = _ref3.message;\n      return __jsx(CustomForm, {\n        status: status,\n        message: message,\n        onValidated: function onValidated(formData) {\n          return subscribe(formData);\n        },\n        alertColor: alertColor,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c2 = SubscribeEmail;\nexport default SubscribeEmail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomForm\");\n$RefreshReg$(_c2, \"SubscribeEmail\");","map":{"version":3,"sources":["C:/Users/SOHYUN LIM/Developer Liiim/SpringBoot/SpringBoot-finalproject/fe/components/Newsletter/SubscribeEmail.js"],"names":["MailchimpSubscribe","CustomForm","status","message","onValidated","alertColor","email","submit","value","indexOf","EMAIL","emailInput","document","getElementById","node","color","fontSize","marginTop","lineHeight","__html","SubscribeEmail","mailchimpUrl","subscribe","formData"],"mappings":"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","sourcesContent":["import MailchimpSubscribe from \"react-mailchimp-subscribe\";\r\n\r\nconst CustomForm = ({ status, message, onValidated, alertColor }) => {\r\n  let email;\r\n  const submit = () => {\r\n    email &&\r\n      email.value.indexOf(\"@\") > -1 &&\r\n      onValidated({\r\n        EMAIL: email.value\r\n      });\r\n\r\n    let emailInput = document.getElementById(\"mc-form-email\");\r\n    emailInput.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"subscribe-form\">\r\n      <div className=\"mc-form position-relative\">\r\n        <input\r\n          id=\"mc-form-email\"\r\n          className=\"email\"\r\n          ref={(node) => (email = node)}\r\n          type=\"email\"\r\n          placeholder=\"Your email address\"\r\n        />\r\n        <button className=\"button\" onClick={submit}>\r\n          SUBSCRIBE\r\n        </button>\r\n      </div>\r\n\r\n      {status === \"sending\" && (\r\n        <div\r\n          style={{\r\n            color: alertColor,\r\n            fontSize: \"14px\",\r\n            marginTop: \"15px\",\r\n            lineHeight: \"1.3\"\r\n          }}\r\n        >\r\n          sending...\r\n        </div>\r\n      )}\r\n      {status === \"error\" && (\r\n        <div\r\n          style={{\r\n            color: alertColor,\r\n            fontSize: \"14px\",\r\n            marginTop: \"15px\",\r\n            lineHeight: \"1.3\"\r\n          }}\r\n          dangerouslySetInnerHTML={{ __html: message }}\r\n        />\r\n      )}\r\n      {status === \"success\" && (\r\n        <div\r\n          style={{\r\n            color: alertColor,\r\n            fontSize: \"14px\",\r\n            marginTop: \"15px\",\r\n            lineHeight: \"1.3\"\r\n          }}\r\n          dangerouslySetInnerHTML={{ __html: message }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SubscribeEmail = ({ mailchimpUrl, alertColor }) => {\r\n  return (\r\n    <div>\r\n      <MailchimpSubscribe\r\n        url={mailchimpUrl}\r\n        render={({ subscribe, status, message }) => (\r\n          <CustomForm\r\n            status={status}\r\n            message={message}\r\n            onValidated={(formData) => subscribe(formData)}\r\n            alertColor={alertColor}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubscribeEmail;\r\n"]},"metadata":{},"sourceType":"module"}