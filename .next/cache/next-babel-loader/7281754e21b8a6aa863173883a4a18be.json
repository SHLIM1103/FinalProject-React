{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leedo\\\\leests\\\\workspace\\\\hel\\\\my-app\\\\components\\\\ProductThumb\\\\ProductWidgetWrapper.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { getDiscountPrice } from \"../../lib/product\";\nimport { addToCart } from \"../../redux/actions/cartActions\";\nimport ProductWidget from \"./ProductWidget\";\n\nconst ProductWidgetWrapper = ({\n  products,\n  bottomSpace,\n  addToCart,\n  cartItems,\n  sliderClass\n}) => {\n  const {\n    addToast\n  } = useToasts();\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, products && products.map(product => {\n    const discountedPrice = getDiscountPrice(product.price, product.discount).toFixed(2);\n    const productPrice = product.price.toFixed(2);\n    const cartItem = cartItems.filter(cartItem => cartItem.id === product.id)[0];\n    return __jsx(ProductWidget, {\n      key: product.id,\n      product: product,\n      discountedPrice: discountedPrice,\n      productPrice: productPrice,\n      cartItem: cartItem,\n      bottomSpace: bottomSpace,\n      addToCart: addToCart,\n      addToast: addToast,\n      sliderClass: sliderClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    });\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    cartItems: state.cartData,\n    wishlistItems: state.wishlistData,\n    compareItems: state.compareData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: (item, addToast, quantityCount, selectedProductColor, selectedProductSize) => {\n      dispatch(addToCart(item, addToast, quantityCount, selectedProductColor, selectedProductSize));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductWidgetWrapper);","map":{"version":3,"sources":["C:/Users/leedo/leests/workspace/hel/my-app/components/ProductThumb/ProductWidgetWrapper.js"],"names":["Fragment","connect","useToasts","getDiscountPrice","addToCart","ProductWidget","ProductWidgetWrapper","products","bottomSpace","cartItems","sliderClass","addToast","map","product","discountedPrice","price","discount","toFixed","productPrice","cartItem","filter","id","mapStateToProps","state","cartData","wishlistItems","wishlistData","compareItems","compareData","mapDispatchToProps","dispatch","item","quantityCount","selectedProductColor","selectedProductSize"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,SAAT,QAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAC5BC,EAAAA,QAD4B;AAE5BC,EAAAA,WAF4B;AAG5BJ,EAAAA,SAH4B;AAI5BK,EAAAA,SAJ4B;AAK5BC,EAAAA;AAL4B,CAAD,KAMvB;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAeT,SAAS,EAA9B;AACA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,QAAQ,IACPA,QAAQ,CAACK,GAAT,CAAcC,OAAD,IAAa;AACxB,UAAMC,eAAe,GAAGX,gBAAgB,CACtCU,OAAO,CAACE,KAD8B,EAEtCF,OAAO,CAACG,QAF8B,CAAhB,CAGtBC,OAHsB,CAGd,CAHc,CAAxB;AAIA,UAAMC,YAAY,GAAGL,OAAO,CAACE,KAAR,CAAcE,OAAd,CAAsB,CAAtB,CAArB;AACA,UAAME,QAAQ,GAAGV,SAAS,CAACW,MAAV,CACdD,QAAD,IAAcA,QAAQ,CAACE,EAAT,KAAgBR,OAAO,CAACQ,EADvB,EAEf,CAFe,CAAjB;AAIA,WACE,MAAC,aAAD;AACE,MAAA,GAAG,EAAER,OAAO,CAACQ,EADf;AAEE,MAAA,OAAO,EAAER,OAFX;AAGE,MAAA,eAAe,EAAEC,eAHnB;AAIE,MAAA,YAAY,EAAEI,YAJhB;AAKE,MAAA,QAAQ,EAAEC,QALZ;AAME,MAAA,WAAW,EAAEX,WANf;AAOE,MAAA,SAAS,EAAEJ,SAPb;AAQE,MAAA,QAAQ,EAAEO,QARZ;AASE,MAAA,WAAW,EAAED,WATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAaD,GAvBD,CAFJ,CADF;AA6BD,CArCD;;AAuCA,MAAMY,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLd,IAAAA,SAAS,EAAEc,KAAK,CAACC,QADZ;AAELC,IAAAA,aAAa,EAAEF,KAAK,CAACG,YAFhB;AAGLC,IAAAA,YAAY,EAAEJ,KAAK,CAACK;AAHf,GAAP;AAKD,CAND;;AAQA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL1B,IAAAA,SAAS,EAAE,CACT2B,IADS,EAETpB,QAFS,EAGTqB,aAHS,EAITC,oBAJS,EAKTC,mBALS,KAMN;AACHJ,MAAAA,QAAQ,CACN1B,SAAS,CACP2B,IADO,EAEPpB,QAFO,EAGPqB,aAHO,EAIPC,oBAJO,EAKPC,mBALO,CADH,CAAR;AASD;AAjBI,GAAP;AAmBD,CApBD;;AAsBA,eAAejC,OAAO,CACpBqB,eADoB,EAEpBO,kBAFoB,CAAP,CAGbvB,oBAHa,CAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getDiscountPrice } from \"../../lib/product\";\r\nimport { addToCart } from \"../../redux/actions/cartActions\";\r\nimport ProductWidget from \"./ProductWidget\";\r\n\r\nconst ProductWidgetWrapper = ({\r\n  products,\r\n  bottomSpace,\r\n  addToCart,\r\n  cartItems,\r\n  sliderClass\r\n}) => {\r\n  const { addToast } = useToasts();\r\n  return (\r\n    <Fragment>\r\n      {products &&\r\n        products.map((product) => {\r\n          const discountedPrice = getDiscountPrice(\r\n            product.price,\r\n            product.discount\r\n          ).toFixed(2);\r\n          const productPrice = product.price.toFixed(2);\r\n          const cartItem = cartItems.filter(\r\n            (cartItem) => cartItem.id === product.id\r\n          )[0];\r\n\r\n          return (\r\n            <ProductWidget\r\n              key={product.id}\r\n              product={product}\r\n              discountedPrice={discountedPrice}\r\n              productPrice={productPrice}\r\n              cartItem={cartItem}\r\n              bottomSpace={bottomSpace}\r\n              addToCart={addToCart}\r\n              addToast={addToast}\r\n              sliderClass={sliderClass}\r\n            />\r\n          );\r\n        })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartItems: state.cartData,\r\n    wishlistItems: state.wishlistData,\r\n    compareItems: state.compareData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addToCart: (\r\n      item,\r\n      addToast,\r\n      quantityCount,\r\n      selectedProductColor,\r\n      selectedProductSize\r\n    ) => {\r\n      dispatch(\r\n        addToCart(\r\n          item,\r\n          addToast,\r\n          quantityCount,\r\n          selectedProductColor,\r\n          selectedProductSize\r\n        )\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProductWidgetWrapper);\r\n"]},"metadata":{},"sourceType":"module"}